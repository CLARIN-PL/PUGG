[tool.poetry]
name = "PUGG"
version = "1.0.0"
description = ""
authors = ["Albert Sawczyn <albert.sawczyn@pwr.edu.pl>"]

[tool.poetry.dependencies]
python = "3.10.*"
numpy = "1.23.3"
google-api-python-client = "2.63.0"
typer = { version = "0.4.2", extras = ["all"] }
pandas = "1.4.4"
spacy = "3.4.1"
pl-core-news-lg = { url = "https://github.com/explosion/spacy-models/releases/download/pl_core_news_lg-3.4.0/pl_core_news_lg-3.4.0-py3-none-any.whl"}
pl-core-news-sm = { url = "https://github.com/explosion/spacy-models/releases/download/pl_core_news_sm-3.4.0/pl_core_news_sm-3.4.0-py3-none-any.whl"}
transformers = { version = "4.37.2", extras = ["torch"] }
srsly = "2.4.4"
seaborn = "0.11.2"
pandas-profiling = "3.3.0"
ipywidgets = "8.0.2"
tabulate = "0.9.0"
python-dotenv = "0.21.0"
tinydb = "4.7.0"
ujson = "5.5.0"
dframcy = "0.1.6"
wikipedia = "1.4.0"
mpire = "2.6.0"
torch = "2.0.0"
build = "0.10.0"
ipykernel = "6.21.1"
python-levenshtein = "0.20.9"
datasets = "2.18.0"
openai = "0.27.3"
openpyxl = "3.1.2"
lxml = "4.9.3"
scikit-learn = "1.3.2"
sparqlwrapper = "2.0.0"
Unidecode = { git = "https://github.com/avian2/unidecode.git", branch = "master" }
qwikidata = "0.4.2"
sentence-transformers="2.3.0"
tenacity="8.2.3"
lit="16.0.6"
types-pyyaml = "^6.0.12.20240808"

[tool.poetry.dev-dependencies]
black = { version = "22.3.0", extras = ["jupyter"] }
isort = { version = "5.10.1", extras = ["pyproject"] }
mypy = "0.982"
poethepoet = "0.14.0"
pyflakes = "2.4.0"
pytest = "7.1.2"
coverage = {extras = ["toml"], version = "6.4.1"}
pytest-env = "0.6.2"
dvc = { version = "3.51.2", extras = ["s3"] }
types-requests = "2.28.11"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
black = "black --check ./"
isort = "isort . -c"
black_fix = "black ./"
isort_fix = "isort . "
pyflakes = "pyflakes gqqd sqqd tools baselines"
mypy_gqqd = "mypy -p gqqd"
mypy_sqqd = "mypy -p sqqd"
mypy_baselines = "mypy -p baselines"
mypy_tools = "mypy tools"
mypy = ["mypy_gqqd", "mypy_sqqd", "mypy_tools", "mypy_baselines"]
coverage_test = "coverage run -m pytest -k 'not TestLinksAgreement'"
coverage_report = "coverage report -mi"
test = ["coverage_test", "coverage_report"]
check = ["black", "isort", "pyflakes", "mypy"]
fix = ["black_fix", "isort_fix"]
all = ["check", "test"]
fix_check = ["fix", "check"]

[tool.black]
line-length = 100

[tool.isort]
line_length = 100
known_first_party = ["gqqd", "sqqd"]
known_third_party = ["click", "pytest"]
profile = "black"

[tool.mypy]
python_version = "3.10"
strict = true
plugins = "numpy.typing.mypy_plugin"
exclude = [
    "baselines/mrc/hf_qa",
    "baselines/ir/scripts/src"
]

[[tool.mypy.overrides]]
module = [
    "googleapiclient.*",
    "pandas",
    "tqdm",
    "transformers",
    "tor_python_easy.*",
    "srsly",
    "pygaggle.*",
    "mpire",
    "openpyxl.*",
    "sentence_transformers.*",
    "sklearn.preprocessing",
    "dateutil.*",
    "nbformat",
    "sympy.*",
    "huggingface_hub",
    "dvc.repo"
]
ignore_missing_imports = true
